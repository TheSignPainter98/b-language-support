{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "B",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#substitution"
		},
		{
			"include": "#buildInFunctions"
		},
		{
			"include": "#definedSets"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#identifiers"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.b",
					"match": "\\b(MACHINE|SETS|VARIABLES|INITIALISATION|OPERATIONS|PRE|IF|THEN|ELSIF|ELSE|END|CHOICE|OR|SELECT|WHEN|CASE|OF|EITHER|VAR|IN|ANY|WHERE|LET|BE|WHILE|DO|VARIANT|INVARIANT|<--|skip)\\b"
				},
				{
					"name": "keyword.control.less.b",
					"match": "\\b:=\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.b",
					"match": "\\b(&|or|=>|<=>|not|!|#|=|/=|\\||\\/|/\\\\|-|\\|->|\\*|.|:|/:|<:|/<:|<<:|/<<:|\\+|/|mod|\\.\\.|>|<|>=|<=|<->|;|<\\||<<\\||\\|>|\\|>>|~|<\\+|\\+>|><|\\|\\||\\+->|-->|>\\+>|>->|\\+->>|>->>|%|\\^|->|<-|/\\|\\\\|\\\\\\|/|==>|\\[\\]|@|circ)\\b"
				}
			]
		},
		"substitution": {
			"patterns": [
				{
					"name": "support.function.b",
					"match": "\\b\\[[a-zA-Z_][a-zA-Z_0-9]*\\]\\b"
				}
			]
		},
		"buildInFunctions": {
			"patterns": [
				{
					"name": "support.function.b",
					"match": "\\b(POW|POW1|FIN|FIN1|card|union|inter|UNION|INTER|min|max|SIGMA|PI|dom|ran|id|iterate|closure|prj1|prj2|seq|seq1|iseq|perm|size|rev|first|last|tail|front|conc|bool)"
				}
			]
		},
		"definedSets": {
			"patterns": [
				{
					"name": "constant.language.b",
					"match": "(NAT|NAT1)"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.b",
					"match": "\\b[0-9]+\\b"
				}
			]
		},
		"identifiers": {
			"patterns": [
				{
					"name": "support.variable.b",
					"match": "\\b[a-zA-Z_][a-zA-Z_0-9]*\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.b",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.b",
					"match": "\\\\."
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.block.b",
					"begin": "/\\*",
					"end": "\\*/"
				},
				{
					"name": "comment.line.number-sign.b",
					"begin": "#",
					"end": "\\n"
				}
			]
		}
	},
	"scopeName": "source.b"
}
